{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\admin-dashboard\\\\martfury-admin-react\\\\pages\\\\file-management\\\\index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ContainerDefault from \"~/components/layouts/ContainerDefault\";\nimport HeaderDashboard from \"~/components/shared/headers/HeaderDashboard\";\nimport { storage } from \"~/firebaseConfig\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\"; // import { v4 } from \"uuid\";\n\nconst index = () => {\n  const {\n    0: searchTerm,\n    1: setSearchTerm\n  } = useState(\"\");\n  const {\n    0: fileUpload,\n    1: setFileUpload\n  } = useState(null);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const fileListRef = ref(storage, \"file/\");\n\n  const uploadFile = () => {\n    if (fileUpload == null) return;\n    const fileRef = ref(storage, `file/${fileUpload.name}`);\n    uploadBytes(fileRef, fileUpload).then(snapshot => {\n      // console.log(snapshot);\n      getDownloadURL(snapshot.ref).then(url => {\n        setFileList(prev => [...prev, url]);\n      });\n      alert(\"File Uploaded\");\n    });\n  };\n\n  useEffect(() => {\n    listAll(fileListRef).then(res => {\n      // console.log(res);\n      res.items.forEach(item => {\n        // console.log(item.name);\n        getDownloadURL(item).then(url => {\n          setFileList(prev => [...prev, {\n            url,\n            name: item.name\n          }]);\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ContainerDefault, {\n      title: \"File Manage\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderDashboard, {\n        title: \"File Management\",\n        description: \"File Listing \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            setFileUpload(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            // className={style.input}\n            type: \"text\",\n            placeholder: \"Search Employee...\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table border shadow mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark \",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"File Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: fileList.filter(file => {\n              if (searchTerm == \"\") {\n                return user;\n              } else if (file.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                return file;\n              }\n            }).map(item => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: item.url,\n                  target: \"_blank\",\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default index;","map":{"version":3,"sources":["E:/FYP/admin-dashboard/martfury-admin-react/pages/file-management/index.jsx"],"names":["React","useState","useEffect","ContainerDefault","HeaderDashboard","storage","ref","uploadBytes","listAll","getDownloadURL","index","searchTerm","setSearchTerm","fileUpload","setFileUpload","fileList","setFileList","fileListRef","uploadFile","fileRef","name","then","snapshot","url","prev","alert","res","items","forEach","item","e","target","files","event","value","filter","file","user","toLowerCase","includes","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ContainerDefault from \"~/components/layouts/ContainerDefault\";\nimport HeaderDashboard from \"~/components/shared/headers/HeaderDashboard\";\nimport { storage } from \"~/firebaseConfig\";\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\";\n// import { v4 } from \"uuid\";\nconst index = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState(null);\n  const [fileList, setFileList] = useState([]);\n  const fileListRef = ref(storage, \"file/\");\n  const uploadFile = () => {\n    if (fileUpload == null) return;\n    const fileRef = ref(storage, `file/${fileUpload.name}`);\n\n    uploadBytes(fileRef, fileUpload).then((snapshot) => {\n      // console.log(snapshot);\n      getDownloadURL(snapshot.ref).then((url) => {\n        setFileList((prev) => [...prev, url]);\n      });\n      alert(\"File Uploaded\");\n    });\n  };\n\n  useEffect(() => {\n    listAll(fileListRef).then((res) => {\n      // console.log(res);\n      res.items.forEach((item) => {\n        // console.log(item.name);\n        getDownloadURL(item).then((url) => {\n          setFileList((prev) => [...prev, { url, name: item.name }]);\n        });\n      });\n    });\n  }, []);\n  return (\n    <>\n      <ContainerDefault title='File Manage'>\n        <HeaderDashboard title='File Management' description='File Listing ' />\n\n        <div>\n          <input\n            type='file'\n            onChange={(e) => {\n              setFileUpload(e.target.files[0]);\n            }}\n          />\n          <button onClick={uploadFile}>Upload File</button>\n        </div>\n        <div>\n          <div className='col-6'>\n            <input\n              // className={style.input}\n              type='text'\n              placeholder='Search Employee...'\n              onChange={(event) => {\n                setSearchTerm(event.target.value);\n              }}\n            />\n          </div>\n          {/* {fileList.map((item) => {\n            return (\n              <a href={item.url} target='_blank'>\n                {\" \"}\n                {item.name}{\" \"}\n              </a>\n            );\n          })} */}\n\n          <table className='table border shadow mt-4'>\n            <thead className='thead-dark '>\n              <tr>\n                <th scope='col'>File Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {fileList\n                .filter((file) => {\n                  if (searchTerm == \"\") {\n                    return user;\n                  } else if (\n                    file.name.toLowerCase().includes(searchTerm.toLowerCase())\n                  ) {\n                    return file;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <tr>\n                      <a href={item.url} target='_blank'>\n                        <td>{item.name}</td>\n                      </a>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </ContainerDefault>\n    </>\n  );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}