{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\FYP\\\\admin-dashboard\\\\martfury-admin-react\\\\pages\\\\meeting-scheduler\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // import ContainerDefault from \"~/components/layouts/ContainerDefault\";\n// import HeaderDashboard from \"~/components/shared/headers/HeaderDashboard\";\n\nimport { Agenda, Day, Inject, Month, ScheduleComponent, Week, WorkWeek } from \"@syncfusion/ej2-react-schedule\";\nimport { addDoc, collection, onSnapshot, query } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\"; // import { database } from \"./firebase.config\";\n\nimport { database } from \"~/firebaseConfig\";\nimport moment from \"moment\";\nimport \"./style.css\";\nexport function App() {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  useEffect(() => {\n    const q = query(collection(database, \"events\"));\n    const unsub = onSnapshot(q, doc => {\n      const tempEvents = [];\n      doc.forEach(el => {\n        console.log(\"CBM\", el.data());\n        tempEvents.push(_objectSpread(_objectSpread({}, el.data()), {}, {\n          EndTime: new Date(el.data().EndTime),\n          StartTime: new Date(el.data().StartTime)\n        }));\n      });\n      setData(tempEvents);\n    });\n    return () => unsub();\n  }, []);\n\n  function createEvent(values) {\n    addDoc(collection(database, \"events\"), values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScheduleComponent, {\n      height: \"550px\",\n      selectedDate: new Date(2018, 1, 15),\n      eventSettings: {\n        dataSource: data\n      },\n      actionComplete: args => {\n        if (args.requestType === \"eventCreated\") {\n          createEvent(_objectSpread(_objectSpread({}, args.data[0]), {}, {\n            EndTime: moment(args.data[0].EndTime).format(),\n            StartTime: moment(args.data[0].StartTime).format()\n          }));\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Inject, {\n        services: [Day, Week, WorkWeek, Month, Agenda]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // const CustomersPage = () => {\n//   //   const dispatch = useDispatch();\n//   //   useEffect(() => {\n//   //     dispatch(toggleDrawerMenu(false));\n//   //   }, []);\n//   return (\n//     <ContainerDefault title='Meeting Scheduler'>\n//       <HeaderDashboard title='Meeting Scheduler' description='Meeting List' />\n//       <div>\n//         <h1>Meeting Details</h1>\n//       </div>\n//     </ContainerDefault>\n//   );\n// };\n// export default CustomersPage;\n// export default connect((state) => state.app)(CustomersPage);","map":{"version":3,"sources":["E:/FYP/admin-dashboard/martfury-admin-react/pages/meeting-scheduler/index.jsx"],"names":["React","Agenda","Day","Inject","Month","ScheduleComponent","Week","WorkWeek","addDoc","collection","onSnapshot","query","useEffect","useState","database","moment","App","data","setData","q","unsub","doc","tempEvents","forEach","el","console","log","push","EndTime","Date","StartTime","createEvent","values","dataSource","args","requestType","format"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,iBALF,EAMEC,IANF,EAOEC,QAPF,QAQO,gCARP;AASA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,KAAzC,QAAsD,oBAAtD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,aAAP;AAEA,OAAO,SAASC,GAAT,GAAe;AACpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,CAAC,GAAGR,KAAK,CAACF,UAAU,CAACK,QAAD,EAAW,QAAX,CAAX,CAAf;AACA,UAAMM,KAAK,GAAGV,UAAU,CAACS,CAAD,EAAKE,GAAD,IAAS;AACnC,YAAMC,UAAU,GAAG,EAAnB;AACAD,MAAAA,GAAG,CAACE,OAAJ,CAAaC,EAAD,IAAQ;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,EAAE,CAACP,IAAH,EAAnB;AAEAK,QAAAA,UAAU,CAACK,IAAX,iCACKH,EAAE,CAACP,IAAH,EADL;AAEEW,UAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASL,EAAE,CAACP,IAAH,GAAUW,OAAnB,CAFX;AAGEE,UAAAA,SAAS,EAAE,IAAID,IAAJ,CAASL,EAAE,CAACP,IAAH,GAAUa,SAAnB;AAHb;AAKD,OARD;AAUAZ,MAAAA,OAAO,CAACI,UAAD,CAAP;AACD,KAbuB,CAAxB;AAeA,WAAO,MAAMF,KAAK,EAAlB;AACD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,WAASW,WAAT,CAAqBC,MAArB,EAA6B;AAC3BxB,IAAAA,MAAM,CAACC,UAAU,CAACK,QAAD,EAAW,QAAX,CAAX,EAAiCkB,MAAjC,CAAN;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,iBAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,YAAY,EAAE,IAAIH,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFhB;AAGE,MAAA,aAAa,EAAE;AAAEI,QAAAA,UAAU,EAAEhB;AAAd,OAHjB;AAIE,MAAA,cAAc,EAAGiB,IAAD,IAAU;AACxB,YAAIA,IAAI,CAACC,WAAL,KAAqB,cAAzB,EAAyC;AACvCJ,UAAAA,WAAW,iCACNG,IAAI,CAACjB,IAAL,CAAU,CAAV,CADM;AAETW,YAAAA,OAAO,EAAEb,MAAM,CAACmB,IAAI,CAACjB,IAAL,CAAU,CAAV,EAAaW,OAAd,CAAN,CAA6BQ,MAA7B,EAFA;AAGTN,YAAAA,SAAS,EAAEf,MAAM,CAACmB,IAAI,CAACjB,IAAL,CAAU,CAAV,EAAaa,SAAd,CAAN,CAA+BM,MAA/B;AAHF,aAAX;AAKD;AACF,OAZH;AAAA,6BAcE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAAClC,GAAD,EAAMI,IAAN,EAAYC,QAAZ,EAAsBH,KAAtB,EAA6BH,MAA7B;AAAlB;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n// import ContainerDefault from \"~/components/layouts/ContainerDefault\";\n// import HeaderDashboard from \"~/components/shared/headers/HeaderDashboard\";\nimport {\n  Agenda,\n  Day,\n  Inject,\n  Month,\n  ScheduleComponent,\n  Week,\n  WorkWeek,\n} from \"@syncfusion/ej2-react-schedule\";\nimport { addDoc, collection, onSnapshot, query } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\n// import { database } from \"./firebase.config\";\nimport { database } from \"~/firebaseConfig\";\n\nimport moment from \"moment\";\n\nimport \"./style.css\";\n\nexport function App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const q = query(collection(database, \"events\"));\n    const unsub = onSnapshot(q, (doc) => {\n      const tempEvents = [];\n      doc.forEach((el) => {\n        console.log(\"CBM\", el.data());\n\n        tempEvents.push({\n          ...el.data(),\n          EndTime: new Date(el.data().EndTime),\n          StartTime: new Date(el.data().StartTime),\n        });\n      });\n\n      setData(tempEvents);\n    });\n\n    return () => unsub();\n  }, []);\n\n  function createEvent(values) {\n    addDoc(collection(database, \"events\"), values);\n  }\n\n  return (\n    <>\n      <ScheduleComponent\n        height='550px'\n        selectedDate={new Date(2018, 1, 15)}\n        eventSettings={{ dataSource: data }}\n        actionComplete={(args) => {\n          if (args.requestType === \"eventCreated\") {\n            createEvent({\n              ...args.data[0],\n              EndTime: moment(args.data[0].EndTime).format(),\n              StartTime: moment(args.data[0].StartTime).format(),\n            });\n          }\n        }}\n      >\n        <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n      </ScheduleComponent>\n    </>\n  );\n}\n\n// const CustomersPage = () => {\n//   //   const dispatch = useDispatch();\n//   //   useEffect(() => {\n//   //     dispatch(toggleDrawerMenu(false));\n//   //   }, []);\n//   return (\n//     <ContainerDefault title='Meeting Scheduler'>\n//       <HeaderDashboard title='Meeting Scheduler' description='Meeting List' />\n//       <div>\n//         <h1>Meeting Details</h1>\n//       </div>\n//     </ContainerDefault>\n//   );\n// };\n// export default CustomersPage;\n// export default connect((state) => state.app)(CustomersPage);\n"]},"metadata":{},"sourceType":"module"}